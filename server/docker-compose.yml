
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: "rabbitmq"
    volumes:
      - /var/lib/rabbitmq
    ports:
      - "5672:5672" 
      - "15672:15672"
    env_file:
      - .env
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    # command: /bin/sh -c "redis-server --requirepass $$REDIS_PASS"
    ports:
      - "6379:6379"
    # env_file:
    #   - .env
    # volumes:
    #   - ./redis/data:/data
    networks:
      - app-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    ports:
      - "8000:8081"  # Redis-Commander port
    environment:
      - REDIS_HOSTS=local:redis:6379
    networks:
      - app-network
  
 
  # api:
  #   build:
  #     context: ./
  #     dockerfile: ./apps/api/Dockerfile
  #   ports:
  #     - "3000:3000"
  #   env_file:
  #     - .env
  #   depends_on:
  #     - rabbitmq
  #     - redis
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   command: npm run start:dev api

  # micro-user:
  #   build:
  #     context: ./
  #     dockerfile: ./apps/micro-user/Dockerfile
  #   env_file:
  #     - .env
  #   depends_on:
  #     - rabbitmq
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   command: npm run start:dev micro-user

  # micro-post:
  #   build:
  #     context: ./
  #     dockerfile: ./apps/micro-post/Dockerfile
  #   env_file:
  #     - .env
  #   depends_on:
  #     - rabbitmq
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   command: npm run start:dev micro-post

  # micro-aws:
  #   build:
  #     context: ./
  #     dockerfile: ./apps/micro-aws/Dockerfile
  #   env_file:
  #     - .env
  #   depends_on:
  #     - rabbitmq
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   command: npm run start:dev micro-aws

  # micro-auth:
  #   build:
  #     context: ./
  #     dockerfile: ./apps/micro-auth/Dockerfile
  #   env_file:
  #     - .env
  #   depends_on:
  #     - rabbitmq
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   command: npm run start:dev micro-auth
  
  # micro-chat:
  #   build:
  #     context: ./
  #     dockerfile: ./apps/micro-chat/Dockerfile
  #   ports:
  #     - "3001:3001"
  #   env_file:
  #     - .env
  #   depends_on:
  #     - rabbitmq
  #     - redis
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   command: npm run start:dev micro-chat

  
networks:
  app-network:
    driver: bridge
